% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MapProcess-methods.R
\name{processRanges}
\alias{processRanges}
\title{Process ranges}
\usage{
processRanges(con, ...)
}
\arguments{
\item{con}{An sqlite connection pointing to a valid \code{rangeMapper} project.}

\item{\dots}{see \code{\link[rangeMapper]{rangeMapProcess}}}
}
\description{
Each polygon range is overlayed on the canvas and the results are saved to
the active project file.
}
\details{
The overlay is performed using \code{\link[sp]{overlay}}. If the overlay
returns no results (i.e. the polygon is smaller than a grid cell) then the
centroid of the range will snap to the nearest point and only one grid cell
will be returned for that range.
}
\note{
If thousands of individual range map polygons are processed, their
geometries are complex and/or the canvas resolution is relatively high this
step can be time consuming.
}
\examples{

require(rangeMapper)
wd = tempdir()

\dontrun{
# Multiple files (one file per range)
rdr= system.file(package = "rangeMapper", "extdata", "wrens", "vector")
dbcon = rangeMap.start(file = "wrens.sqlite", overwrite = TRUE, dir = wd)
global.bbox.save(con = dbcon, bbox = rdr)
gridSize.save(dbcon, gridSize = 2) ; canvas.save(dbcon)
system.time(processRanges(dir = rdr, con =  dbcon))
}

# One file containing all the ranges
r = readOGR(system.file(package = "rangeMapper", "extdata",
	"wrens", "vector_combined"), "wrens", verbose = FALSE)

dbcon = rangeMap.start(file = "wrens.sqlite", overwrite = TRUE, dir = wd )
global.bbox.save(con = dbcon, bbox = r)
gridSize.save(dbcon, gridSize = 2)
canvas.save(dbcon)

system.time(processRanges(spdf = r, con =  dbcon, ID = "sci_name" ))
# ~ 18 times faster than processing individual ranges.


}
\seealso{
\code{\link[rangeMapper]{rangeMapper}}
\code{\link[rangeMapper]{rangeTraits}}
\code{\link[rangeMapper]{metadataUpdate}}.
}
\keyword{spatial}

