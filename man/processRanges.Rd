% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MapProcess-methods.R
\docType{methods}
\name{processRanges}
\alias{processRanges}
\alias{processRanges,SQLiteConnection,SpatialPolygonsDataFrame,missing,character,list-method}
\alias{processRanges,SQLiteConnection,SpatialPolygonsDataFrame,missing,character,missing-method}
\title{processRanges}
\usage{
processRanges(sqlitecon, spdf, dir, ID, metadata)


  \S4method{processRanges}{SQLiteConnection,SpatialPolygonsDataFrame,missing,character,missing}(sqlitecon,
  spdf, ID, metadata)


  \S4method{processRanges}{SQLiteConnection,SpatialPolygonsDataFrame,missing,character,list}(sqlitecon,
  spdf, ID, metadata)
}
\arguments{
\item{sqlitecon}{a \code{connection} object.}

\item{spdf}{\code{\link[sp]{SpatialPolygonsDataFrame}} object containing all the ranges.}

\item{dir}{ranges file directory where the individual ranges shp files are located. In this case the range ID is the file name.}

\item{ID}{when spdf is set this is a \code{character} vector given the name of the range.}

\item{metadata}{a named list of functions. See \code{\link[rangeMapper]{rangeTraits}} and \code{\link[rangeMapper]{metadataUpdate}}}
}
\description{
processRanges
}
\section{Methods (by class)}{
\itemize{
\item \code{sqlitecon = SQLiteConnection,spdf = SpatialPolygonsDataFrame,dir = missing,ID = character,metadata = missing}: One SpatialPolygonsDataFrame containing all the ranges, no metadata are not computed

\item \code{sqlitecon = SQLiteConnection,spdf = SpatialPolygonsDataFrame,dir = missing,ID = character,metadata = list}: One SpatialPolygonsDataFrame containing all the ranges, metadata are computed
}}
\examples{
require(rangeMapper)
if (require(doParallel) ) {
 cl = makePSOCKcluster(detectCores())
 registerDoParallel(cl) }

dbcon = rangeMap.start(file = "wrens.sqlite", dir = tempdir(), overwrite = TRUE)
f = system.file(package = "rangeMapper", "extdata", "wrens", "vector_combined")
global.bbox.save(con = dbcon, bbox = f, p4s = CRS("+proj=cea +lon_0=0 +lat_ts=30 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs"))
gridSize.save(dbcon, gridSize = 250000)
canvas.save(dbcon)

r = readOGR(f, "wrens", verbose = FALSE)
processRanges(sqlitecon = dbcon, spdf = r, ID = "sci_name")
stopCluster(cl)
}

